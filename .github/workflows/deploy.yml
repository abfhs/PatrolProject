name: Deploy to AWS App Runner

on:
  push:
    branches:
      - master

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: patrol
  APP_RUNNER_SERVICE_NAME: patrol-service

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Deploy to AWS App Runner
        uses: aws-actions/apprunner-deploy@v1
        with:
          service: ${{ env.APP_RUNNER_SERVICE_NAME }}
          image: ${{ steps.build-image.outputs.image }}
          access-role-arn: '' # App Runner가 ECR에 접근할 수 있는 역할(Role) ARN. 비워두면 App Runner가 자동으로 생성/관리합니다.
          wait-for-service-stability: 'true'
